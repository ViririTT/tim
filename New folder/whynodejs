When Node.js performs an I/O operation, like reading from the network, accessing a 
database or the filesystem, instead of blocking the thread and wasting CPU cycles waiting,
 Node.js will resume the operations when the response comes back.

This allows Node.js to handle thousands of concurrent connections with a single server
 without introducing the burden of managing thread concurrency, which could be a significant source of bugs.

Node.js has a unique advantage because millions of frontend developers that write JavaScript for 
the browser are now able to write the server-side code in addition to the client-side code without the need
to learn a completely different language.